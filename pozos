#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define FILAS 10
#define COLUMNAS 10

void imprimirMatriz(int matriz[FILAS][COLUMNAS]) {
    for (int i = 0; i < FILAS; i++) {
        for (int j = 0; j < COLUMNAS; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

void jugar(int matriz[FILAS][COLUMNAS], int filaInicial, int columnaInicial, int filaFinal, int columnaFinal) {
    int intentos = 0, movimiento, pf = filaInicial, pc = columnaInicial, ff = filaFinal, fc = columnaFinal;
    matriz[pf][pc] = 7; // Posiciona inicialmente el '7' en (0, 0)
    matriz[ff][fc] = 3;

    while (intentos < 50) {
        imprimirMatriz(matriz);
        printf("Movimiento %d: elige una dirección (1-Arriba, 2-Abajo, 3-Izquierda, 4-Derecha): ", intentos + 1);
        scanf("%d", &movimiento);

        int nueva_fila = pf, nueva_columna = pc;
        switch (movimiento) {
            case 1: // Arriba
                if (pf > 0) nueva_fila = pf - 1;
                break;
            case 2: // Abajo
                if (pf < FILAS - 1) nueva_fila = pf + 1;
                break;
            case 3: // Izquierda
                if (pc > 0) nueva_columna = pc - 1;
                break;
            case 4: // Derecha
                if (pc < COLUMNAS - 1) nueva_columna = pc + 1;
                break;
            default:
                printf("Movimiento no válido. Intente de nuevo.\n");
                continue;
        }

        //Mueve el '7' y cambiar el lugar anterior a '1'
        if (nueva_fila != pf || nueva_columna != pc) {
            matriz[pf][pc] = 1;  
            pf = nueva_fila;
            pc = nueva_columna;
            matriz[pf][pc] = 7;  
        }
        intentos++;
        if(nueva_fila == 9 && nueva_columna == 9){
            printf("eres el ganador, ganaste en %d intentos", intentos);
            break;
        }
    }
}

int main() {
    int matriz[FILAS][COLUMNAS] = {0};
    srand(time(NULL));
    for(int i = 0; i < FILAS; i++) {
        for(int j = 0; j < COLUMNAS; j++) {
            matriz[i][j] = rand() % 2;
            matriz[10][10] = 1;
        }
    }

    // Establece la posición inicial del '7' en (0, 0)
    int filaInicial = 0;
    int columnaInicial = 0;
    int filaFinal = 9;
    int columnaFinal = 9;
    jugar(matriz, filaInicial, columnaInicial, filaFinal, columnaFinal);

    return 0;
}
